---------------------------------------------------------------------------
-- Company     : Automaticaly generated by POD
-- Author(s)   :
--
-- Creation Date : 2009-05-13
-- File          : Top_testinput_tb.vhd
--
-- Abstract :
-- insert a description here
--
---------------------------------------------------------------------------

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.numeric_std.all;

use work.apf27_test_pkg.all;

entity top_input_test_tb is
end entity top_input_test_tb;

architecture RTL of top_input_test_tb is

    CONSTANT HALF_PERIODE : time := 3.75939849624 ns;  -- Half clock period
    CONSTANT IRQ_MNGR00_IRQ_MNGR_MASK : std_logic_vector := x"0000";
    CONSTANT IRQ_MNGR00_IRQ_MNGR_PENDING_ACK : std_logic_vector := x"0002";
    CONSTANT IRQ_MNGR00_ID : std_logic_vector := x"0004";
    CONSTANT INPUT_DATA : std_logic_vector := x"0008";
    CONSTANT INPUT_READ_PER : std_logic_vector := x"000a";
    CONSTANT INPUT_BUS_PER : std_logic_vector := x"000c";
    CONSTANT INPUT_ID : std_logic_vector := x"000e";

    CONSTANT WSC : natural := 4;

    signal  irq_mngr00_gls_irq :  std_logic;
    signal  imx27_wb16_wrapper00_imx_cs_n :  std_logic;
    signal  imx27_wb16_wrapper00_imx_data :  std_logic_vector(15 downto 0);
    signal  rstgen_syscon00_ext_clk :  std_logic;
    signal  imx27_wb16_wrapper00_imx_eb3_n :  std_logic;
    signal  imx27_wb16_wrapper00_imx_oe_n :  std_logic;
    signal  imx27_wb16_wrapper00_imx_address :  std_logic_vector(11 downto 0);
    signal  input_spi_ld_n :  std_logic;
    signal  input_spi_sop :  std_logic;
    signal  input_spi_sip :  std_logic;
    signal  input_spi_clk :  std_logic;

    signal general_input : std_logic_vector( 7 downto 0);

    component top_input_test
    port (
        irq_mngr00_gls_irq : out std_logic;
        imx27_wb16_wrapper00_imx_cs_n : in std_logic;
        imx27_wb16_wrapper00_imx_data : inout std_logic_vector(15 downto 0);
        rstgen_syscon00_ext_clk : in std_logic;
        imx27_wb16_wrapper00_imx_eb3_n : in std_logic;
        imx27_wb16_wrapper00_imx_oe_n : in std_logic;
        imx27_wb16_wrapper00_imx_address : in std_logic_vector(11 downto 0);
        input_spi_ld_n : out std_logic;
        input_spi_sop : in std_logic;
        input_spi_sip : out std_logic;
        input_spi_clk : out std_logic
    );
    end component top_input_test;

    component serializer
        port (
        -- serial signals
         clk   : in std_logic ;
         ce_n  : in std_logic ;
         ld_n  : in std_logic ;
         sop   : out std_logic ;
         sip   : in std_logic ;
        -- parallel input
         input : in std_logic_vector( 7 downto 0)
    );
    end component serializer;

    signal value : std_logic_vector( 15 downto 0);
    signal read_per_s : std_logic_vector(15 downto 0) := x"0001";
    signal bus_per_s : std_logic_vector(15 downto 0) := x"0070";

begin

    top : top_input_test
    port map(
        irq_mngr00_gls_irq => irq_mngr00_gls_irq,
        imx27_wb16_wrapper00_imx_cs_n => imx27_wb16_wrapper00_imx_cs_n,
        imx27_wb16_wrapper00_imx_data => imx27_wb16_wrapper00_imx_data,
        rstgen_syscon00_ext_clk => rstgen_syscon00_ext_clk,
        imx27_wb16_wrapper00_imx_eb3_n => imx27_wb16_wrapper00_imx_eb3_n,
        imx27_wb16_wrapper00_imx_oe_n => imx27_wb16_wrapper00_imx_oe_n,
        imx27_wb16_wrapper00_imx_address => imx27_wb16_wrapper00_imx_address,
        input_spi_ld_n => input_spi_ld_n,
        input_spi_sop => input_spi_sop,
        input_spi_sip => input_spi_sip,
        input_spi_clk => input_spi_clk
    );

    serializer_p : serializer
    port map (
        clk  => input_spi_clk,
        ce_n => '0',
        ld_n => input_spi_ld_n,
        sop  => input_spi_sop,
        sip  => input_spi_sip,
        input=> general_input
    );

    stimulis : process
    begin
        imx27_wb16_wrapper00_imx_cs_n <= '1';
        imx27_wb16_wrapper00_imx_oe_n <= '1';
        imx27_wb16_wrapper00_imx_eb3_n <= '1';
        imx27_wb16_wrapper00_imx_address <= (others => '0');
        imx27_wb16_wrapper00_imx_data <= (others => 'Z');

        -- enable interruption for input industrial
        imx_write(IRQ_MNGR00_IRQ_MNGR_MASK,x"0001",
            rstgen_syscon00_ext_clk,imx27_wb16_wrapper00_imx_cs_n,
            imx27_wb16_wrapper00_imx_oe_n,imx27_wb16_wrapper00_imx_eb3_n,
            imx27_wb16_wrapper00_imx_address,imx27_wb16_wrapper00_imx_data,
            WSC);


        general_input <= x"ca";
        -- configure module (enable interrupts)
        imx_write(INPUT_DATA,x"0100",
            rstgen_syscon00_ext_clk,imx27_wb16_wrapper00_imx_cs_n,
            imx27_wb16_wrapper00_imx_oe_n,imx27_wb16_wrapper00_imx_eb3_n,
            imx27_wb16_wrapper00_imx_address,imx27_wb16_wrapper00_imx_data,
            WSC);
        -- configure read period
        imx_read(INPUT_READ_PER,value,
            rstgen_syscon00_ext_clk,imx27_wb16_wrapper00_imx_cs_n,
            imx27_wb16_wrapper00_imx_oe_n,imx27_wb16_wrapper00_imx_eb3_n,
            imx27_wb16_wrapper00_imx_address,imx27_wb16_wrapper00_imx_data,
            WSC);

        assert value = x"0000"
            report "Wrong read per default value : "&integer'image(to_integer(unsigned(value)))
                severity warning;

        imx_write(INPUT_READ_PER,read_per_s,
            rstgen_syscon00_ext_clk,imx27_wb16_wrapper00_imx_cs_n,
            imx27_wb16_wrapper00_imx_oe_n,imx27_wb16_wrapper00_imx_eb3_n,
            imx27_wb16_wrapper00_imx_address,imx27_wb16_wrapper00_imx_data,
            WSC);

        imx_read(INPUT_READ_PER,value,
            rstgen_syscon00_ext_clk,imx27_wb16_wrapper00_imx_cs_n,
            imx27_wb16_wrapper00_imx_oe_n,imx27_wb16_wrapper00_imx_eb3_n,
            imx27_wb16_wrapper00_imx_address,imx27_wb16_wrapper00_imx_data,
            WSC);

        assert value = read_per_s
            report "Wrong read per default value : "&integer'image(to_integer(unsigned(value)))
                severity warning;

        -- wait for interruption (value changed)
        -----------------------------------------
        wait until rising_edge(irq_mngr00_gls_irq);
        imx_write(IRQ_MNGR00_IRQ_MNGR_PENDING_ACK,x"0001", -- acknowledge interrupt
            rstgen_syscon00_ext_clk,imx27_wb16_wrapper00_imx_cs_n,
            imx27_wb16_wrapper00_imx_oe_n,imx27_wb16_wrapper00_imx_eb3_n,
            imx27_wb16_wrapper00_imx_address,imx27_wb16_wrapper00_imx_data,
            WSC);


        -- read value
        imx_read(INPUT_DATA,value,
            rstgen_syscon00_ext_clk,imx27_wb16_wrapper00_imx_cs_n,
            imx27_wb16_wrapper00_imx_oe_n,imx27_wb16_wrapper00_imx_eb3_n,
            imx27_wb16_wrapper00_imx_address,imx27_wb16_wrapper00_imx_data,
            WSC);

        assert value(7 downto 0) = general_input report "Wrong value read" severity warning;
        report "read value "&integer'image(to_integer(unsigned(value(7 downto 0))))&".";
        wait for 9 us;
        general_input <= x"ac";

        -- configure bus period
        imx_read(INPUT_BUS_PER,value,
            rstgen_syscon00_ext_clk,imx27_wb16_wrapper00_imx_cs_n,
            imx27_wb16_wrapper00_imx_oe_n,imx27_wb16_wrapper00_imx_eb3_n,
            imx27_wb16_wrapper00_imx_address,imx27_wb16_wrapper00_imx_data,
            WSC);

        assert value = x"010A"
            report "Wrong bus per default value : "&integer'image(to_integer(unsigned(value)))
                severity warning;

        imx_write(INPUT_BUS_PER,bus_per_s,
            rstgen_syscon00_ext_clk,imx27_wb16_wrapper00_imx_cs_n,
            imx27_wb16_wrapper00_imx_oe_n,imx27_wb16_wrapper00_imx_eb3_n,
            imx27_wb16_wrapper00_imx_address,imx27_wb16_wrapper00_imx_data,
            WSC);

        imx_read(INPUT_BUS_PER,value,
            rstgen_syscon00_ext_clk,imx27_wb16_wrapper00_imx_cs_n,
            imx27_wb16_wrapper00_imx_oe_n,imx27_wb16_wrapper00_imx_eb3_n,
            imx27_wb16_wrapper00_imx_address,imx27_wb16_wrapper00_imx_data,
            WSC);

        assert value = bus_per_s
            report "Wrong bus per default value : "&integer'image(to_integer(unsigned(value)))
                severity warning;

        -- wait for interruption (value changed)
        -----------------------------------------
        wait until rising_edge(irq_mngr00_gls_irq);
        imx_write(IRQ_MNGR00_IRQ_MNGR_PENDING_ACK,x"0001", -- acknowledge interrupt
            rstgen_syscon00_ext_clk,imx27_wb16_wrapper00_imx_cs_n,
            imx27_wb16_wrapper00_imx_oe_n,imx27_wb16_wrapper00_imx_eb3_n,
            imx27_wb16_wrapper00_imx_address,imx27_wb16_wrapper00_imx_data,
            WSC);

        -- read value
        imx_read(INPUT_DATA,value,
            rstgen_syscon00_ext_clk,imx27_wb16_wrapper00_imx_cs_n,
            imx27_wb16_wrapper00_imx_oe_n,imx27_wb16_wrapper00_imx_eb3_n,
            imx27_wb16_wrapper00_imx_address,imx27_wb16_wrapper00_imx_data,
            WSC);

        wait for 50 us;
        assert false report "End of test" severity error;
    end process stimulis;

    clockp : process
    begin
        rstgen_syscon00_ext_clk <= '1';
        wait for HALF_PERIODE;
        rstgen_syscon00_ext_clk <= '0';
        wait for HALF_PERIODE;
    end process clockp;

end architecture RTL;
